HEX2BIN = '(((999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999).(9)^(9).(9.9)^(99999999999999999999999999999999^999999999999999999999999999^99999999999999999999^999999999999999).(9)).((999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999).(9)^(9).(9^9).(9)^(9999999999999999999999999999999999^9999999999999999999999999999^999999999999999999).(9)))';
DIGITS = [
    '9^9',
    ".99999999999999999999",
    ".99999999999999999999^9.9999999999999999999^9",
    "9.9999999999999999999^9",
    "9.9999999999999999999^99.999999999999999999^9^99",
    "9.9999999999999999999^999.99999999999999999^999",
    "999.99999999999999999^9^999",
    "99.999999999999999999^99",
    ".99999999999999999999^9",
    "9"
];
function HB1(x) { // HEX2BIN(str)
    var ret = Array(x.length);
    for (var i=0; i<x.length; ++i) {
        var c = x.charCodeAt(i).toString(16);
        if (c.length>2) throw RangeError('Unsupported Character '+c);
        if (c.length<2) c='0'+c;
        if (c[0]>'9' || c[1]>'9') throw RangeError('Unsupported Character '+c);
        ret[i] = '(' + DIGITS[c[0]] + ').(' + DIGITS[c[1]] + ')';
    }
    return HEX2BIN+'('+ret.join('.')+')';
}
function HB2(x) { // HEX2BIN(str)^[09]*
    var ret = Array(x.length);
    var ret2 = Array(x.length);
    for (var i=0; i<x.length; ++i) {
        var c = x.charCodeAt(i).toString(16);
        if (c.length>2) throw RangeError('Unsupported Character '+c);
        if (c.length<2) c='0'+c;
        if ((3^c[0])>'9') throw RangeError('Unsupported Character '+c);
        var p = [9,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9]['0x'+c[1]-0];
        ret[i] = '(' + DIGITS[3^c[0]] + ').(' + DIGITS['0x'+c[1]^p] + ')';
        ret2[i] = p?'(9)':'(9^9)';
    }
    return '('+HEX2BIN+'('+ret.join('.')+')^('+ret2.join('.')+'))';
}
function HB(x) { // Shorter of HB1 and HB2
    try { var ret1 = HB1(x); } catch (e) { return HB2(x); }
    try { var ret2 = HB2(x); } catch (e) { return ret1; }
    return ret1.length<ret2.length?ret1:ret2;
}
function encodeCode(s) {
    return '('+HB('CREATE_FUNCTION')+')(...('+HB('STR_GETCSV')+')('+HB(',"'+s.replace(/"/g,'""')+'"')+'))()';
}
console.log(encodeCode(require('fs').readFileSync(0,'utf8')));
